cmake_minimum_required(VERSION 2.8)
find_package(PkgConfig REQUIRED)

find_package(CUDA REQUIRED)
pkg_check_modules(CUDA REQUIRED cuda-6.5)
set(CUDA_NVCC_FLAGS "-O3 --std=c++11 -DCUDA")

if (SDL)
  find_package(SDL2 REQUIRED)
  pkg_check_modules(SDL2 REQUIRED sdl2)
  include_directories(${SDL2_INCLUDE_DIRS})
  if (OPENGL)
    pkg_check_modules(GL REQUIRED gl)
    include_directories("${OPENGL_INCLUDE_DIRS} /usr/include/GL")
  endif ()
elseif (OPENCV)
#  find_package(OpenCV REQUIRED)
  pkg_check_modules(OPENCV REQUIRED opencv)
  include_directories(${OPENCV_INCLUDE_DIRS})
endif ()
include_directories("/usr/local/cuda-6.5/include")
#include_directories("/usr/local/cuda/include")

if (SDL)
  link_directories(${SDL2_LIBRARY_DIRS})
elseif (OPENCV)
  link_directories(${OPENCV_LIBRARY_DIRS})
  if (OPENGL)
    link_directories("${OPENGL_LIBRARY_DIRS} /usr/lib/arm-linux-gnueabin/tegra")
  endif ()
endif ()
link_directories("/usr/local/cuda-6.5/lib")
#link_directories("/usr/local/cuda/lib")
#set(SDL2_LIBRARIES "${SDL2_LIBRARIES} -lSDL2_ttf")
#set(CUDA_LIBRARIES "${CUDA_LIBRARIES} -lcuda")

if (SDL)
  if (OPENGL)
    set(CMAKE_CXX_FLAGS
	 	"-Wall -O3 -mfpu=neon -std=c++11 -DCUDA -DUSESDL -DSDLAUDIO -DUSEGL")
  else ()
    set(CMAKE_CXX_FLAGS
	 	"-Wall -O3 -mfpu=neon -std=c++11 -DCUDA -DUSESDL -DSDLAUDIO")
  endif()
  cuda_add_executable(rd_gray_scott rd_gray_scott.cc reaction.cc conlife.cc
	  sdldraw.cc cudaiter.cu)
  if (OPENGL)
    target_link_libraries(
		rd_gray_scott ${LIBS} ${SDL2_LIBRARIES} -lSDL2_ttf -lGL -lcuda)
  else ()
    target_link_libraries(
		rd_gray_scott ${LIBS} ${SDL2_LIBRARIES} -lSDL2_ttf -lcuda)
  endif ()
elseif (OPENCV)
  set(CMAKE_CXX_FLAGS
	 "-Wall -O3 -mfpu=neon -std=c++11 -DCUDA -DUSECV")
  cuda_add_executable(rd_gray_scott rd_gray_scott.cc reaction.cc conlife.cc
	cvdraw.cc cudaiter.cu)
  target_link_libraries(rd_gray_scott ${LIBS} ${OPENCV_LIBRARIES} -lcuda)
endif ()

