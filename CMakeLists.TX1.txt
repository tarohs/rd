# cmake -DCUDA=ON -DOPENCV=ON -DTX1=ON .

cmake_minimum_required(VERSION 2.8)

#if (ARM)
#  set(CMAKE_CXX_FLAGS "-Wall -O3 -mfpu=neon --std=c++11 -pthread")
#elseif(JETSON)
  set(CMAKE_CXX_FLAGS "-Wall -O3 -g -DCUDA --std=c++11 -pthread")
  if (CUDA)
    set(CMAKE_NVCC_FLAGS 
		"-Wall -O3 -g -DCUDA --std=c++11 -pthread -use_fast_math")
  endif()

  if (SDL)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSESDL")
#    if (SDLAUDIO)
#      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DSDLAUDIO")
#    endif ()
    set(CMAKE_NVCC_FLAGS "${CMAKE_CXX_FLAGS} -DUSESDL")
  elseif (OPENCV)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSECV")
    set(CMAKE_NVCC_FLAGS "${CMAKE_CXX_FLAGS} -DUSECV")
  endif ()

#else(I386)
#  set(CMAKE_CXX_FLAGS "-Wall -O3 --std=c++11 -pthread")
  
find_package(PkgConfig REQUIRED)
if (OPENCV)
  pkg_check_modules(OPENCV REQUIRED opencv)
#  find_package(OPENCV REQUIRED)
elseif (SDL)
  pkg_check_modules(SDL2 REQUIRED sdl2)
#  find_package(SDL2 REQUIRED)
endif ()

#if (TX1)
set(SDL2_LIBRARIES "-L/usr/lib/aarch64-linux-gnu -lSDL2 -lSDL2_ttf")
#endif ()

#if (JETSON)
  if (CUDA)
    find_package(CUDA REQUIRED)
    if (OPENCV)
      include_directories(${OPENCV_INCLUDE_DIRS} "/usr/local/cuda/include")
      link_directories(${OPENCV_LIBRARY_DIRS} "/usr/local/cuda/lib")
      cuda_add_executable(rd_gray_scott rd_gray_scott.cc cvdraw.cc
	    reaction.cc cudaiter.cu conlife.cc)
      target_link_libraries(rd_gray_scott ${LIBS} ${OPENCV_LIBRARIES})
    elseif (SDL)
      include_directories(${SDL2_INCLUDE_DIRS} "/usr/local/cuda/include")
      link_directories(${SDL2_LIBRARY_DIRS} "/usr/local/cuda/lib")
      cuda_add_executable(rd_gray_scott rd_gray_scott.cc sdldraw.cc
	    reaction.cc cudaiter.cu conlife.cc)
      target_link_libraries(rd_gray_scott ${LIBS} ${SDL2_LIBRARIES})
#      target_link_libraries(rd_gray_scott ${LIBS} ${SDL2_LIBRARIES})
      target_link_libraries(rd_gray_scott ${SDL2_LIBRARIES})
      target_link_libraries(rd_gray_scott ${LIBS})
    endif()
  else()
    if (OPENCV)
      include_directories(${OPENCV_INCLUDE_DIRS})
      link_directories(${OPENCV_LIBRARY_DIRS})
      add_executable(rd_gray_scott rd_gray_scott.cc cvdraw.cc iter.cc 
	    reaction.cc conlife.cc)
      target_link_libraries(rd_gray_scott ${LIBS} ${OPENCV_LIBRARIES})
    elseif (SDL)
      include_directories(${SDL2_INCLUDE_DIRS})
      link_directories(${SDL2_LIBRARY_DIRS})
      add_executable(rd_gray_scott rd_gray_scott.cc sdldraw.cc iter.cc 
	    reaction.cc conlife.cc)
      target_link_libraries(rd_gray_scott ${LIBS} ${SDL2_LIBRARIES})
    endif()
  endif()
#else()
#  include_directories(${OPENCV_INCLUDE_DIRS})
#  link_directories(${OPENCV_LIBRARY_DIRS})
#  add_executable(rd_gray_scott rd_gray_scott.cc cvdraw.cc iter.cc 
#	reaction.cc cudaiter.cu conlife.cc)
#  target_link_libraries(rd_gray_scott ${LIBS} ${OPENCV_LIBRARIES})
#endif()
#message(STATUS "${LIBS} ${OPENCV_LIBRARIES}")
